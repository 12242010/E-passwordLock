C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\软件\keil\C51\BIN\C51.EXE main.c DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.H"
   2          #include "stdio.h"
   3          #include "intrins.h"
   4          #include "lcd.h"
   5          
   6          unsigned char key_value;
   7          
   8          #define DB P0//液晶并行数据接口
   9          sbit  RS = P2^5;//液晶指令数据信号
  10          sbit  RW = P2^6;//液晶读写信号
  11          sbit  E  = P2^7;//液晶使能信号
  12          
  13          sbit I2C_SCL = P2^3;//i2c时钟线定义
  14          sbit I2C_SDA = P2^4;//i2c数据线定义
  15          
  16          unsigned char now_window;//当前显示窗口
  17          #define  chosemod  10//输入密码状态
  18          #define  inputpassword  20//输入密码状态
  19          #define  changepassword  30//输入密码状态
  20          #define  putagain  31//再次输入密码状态
  21          #define  keynoser  40//输入密码无效
  22          #define  changeoldpassword  50//输入密码状态
  23          
  24          
  25          unsigned char dis_dat[7]={0};
  26          unsigned char password_now[7]={2,2,3,4,5,6};//输入当前密码保存数组
  27          unsigned char password[7]={1,2,3,1,2,3};//密码保存
  28          unsigned char chang_pass[7];//密码修改存储
  29          signed   char curr_bit;//输入当前位
  30          unsigned char curr_bit_tmp;//输入当前位备份
  31          unsigned char i;
  32          unsigned char cnt_100ms;
  33          unsigned char time_100ms_flag;
  34          unsigned char open_del;//开锁成功延时计数
  35          unsigned char open_flag;//锁状态标志
  36          unsigned char lock_flag;//锁状态标志
  37          
  38          unsigned char password_err_cnt;//密码错误次数
  39          unsigned int  err_tim_cnt;//密码错误次数
  40          unsigned char cha_err_cnt;//修改密码错误延时计数
  41          unsigned char cha_err_flag;//修改密码错误标志
  42          
  43          unsigned char alm_tim_cnt;//报警时间计数
  44          unsigned char alm_flag;//报警标志
  45          
  46          sbit relay = P3^2;
  47          sbit beep = P2^0;
  48          
  49          typedef unsigned char u8;
  50          
  51          u8 Disp[]=" welcome user  ";                                                    
  52          /*******************************************************************************
  53          * 函 数 名         : delay_ms
  54          * 函数功能                 : 延时函数，延时1ms
  55          * 输    入         : cnt
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 2   

  56          * 输    出         : 无
  57          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  58          *******************************************************************************/
  59          void delay_ms(unsigned int cnt)   //
  60          {
  61   1              unsigned int x;
  62   1              for( ; cnt>0; cnt--)
  63   1              {
  64   2                      for(x=110; x>0; x--);//软件延时为1MS
  65   2              }
  66   1      }
  67          
  68          /*******************************************************************************
  69          * 函 数 名         : delay_us
  70          * 函数功能                 : 延时函数，延时1us
  71          * 输    入         : cnt
  72          * 输    出         : 无
  73          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  74          *******************************************************************************/
  75          void delay_us(unsigned int cnt)   //
  76          {
  77   1              while(cnt--);
  78   1      }
  79          
  80          /******************************************************
  81          ** 函数名：time_init
  82          ** 描述  ：定时器初始化
  83          ** 输入  ：无
  84          ** 输出  ：无
  85          ******************************************************/
  86          void time_init(void)
  87          {
  88   1                TMOD |= 0x01;//time0 工作方式为1
  89   1                TH0 = 0xf8;//装载初值
  90   1                TL0 = 0x2f;//装载初值，为2ms(65535-63535)
  91   1            TR0 = 1;//开启定时器
  92   1                ET0 = 1;//打开中断
  93   1                EA=1;
  94   1      }
  95          /******************************************************
  96          ** 函数名：key_scan
  97          ** 描述  ：按键扫描
  98          ** 输入  ：无
  99          ** 输出  ：无
 100          ******************************************************/
 101          void key_scan(void)
 102          {
 103   1              static unsigned char key_in_flag = 0;//按键按下标志
 104   1              unsigned char key_l,key_h;//存储扫描到行列值。
 105   1              key_value = 20;//按键值清除
 106   1              P1 = 0xf0;
 107   1              if((P1 & 0xf0) != 0xf0)//按键按下
 108   1              {
 109   2                      delay_ms(5);//按键消抖动
 110   2                      if(((P1 & 0xf0) != 0xf0) && (key_in_flag == 1))
 111   2                      {
 112   3                              key_in_flag = 0;//松手检测防止一直触发
 113   3                              key_l = P1;//扫描得到行值
 114   3                              P1 = 0x0f;
 115   3                              key_h= P1;////扫描得到列值
 116   3                              switch(key_l|key_h)
 117   3                              {
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 3   

 118   4                                      //获取按键值
 119   4                                      case 0xee:  key_value = 1;break;
 120   4                                      case 0xed:  key_value = 2;break;
 121   4                                      case 0xeb:  key_value = 3;break;
 122   4                                      case 0xe7:  key_value = 10;break;
 123   4      
 124   4                                      case 0xde:  key_value = 4;break;
 125   4                                      case 0xdd:  key_value = 5;break;
 126   4                                      case 0xdb:  key_value = 6;break;
 127   4                                      case 0xd7:  key_value = 11;break;
 128   4      
 129   4                                      case 0xbe:  key_value = 7;break;
 130   4                                      case 0xbd:  key_value = 8;break;
 131   4                                      case 0xbb:  key_value = 9;break;
 132   4                                      case 0xb7:  key_value = 12;break;
 133   4      
 134   4                                      case 0x7e:  key_value = 13;break;
 135   4                                      case 0x7d:  key_value = 0;break;
 136   4                                      case 0x7b:  key_value = 14;break;
 137   4                                      case 0x77:  key_value = 15;break;
 138   4                              }
 139   3                      }
 140   2              }
 141   1              else
 142   1              {
 143   2                      key_in_flag = 1;//(按键松开标志)
 144   2              }
 145   1      }
 146          /*******************************************************************************
 147          * 函 数 名         : LcdWriteCom
 148          * 函数功能                 : 向LCD写入一个字节的命令
 149          * 输    入         : u8com
 150          * 输    出         : 无
 151          *******************************************************************************/
 152          void lcd_wri_com(unsigned char com)       //写入命令
 153          {
 154   1              E = 0;   //使能清零
 155   1              RS = 0;  //选择写入命令
 156   1              RW = 0;  //选择写入
 157   1      
 158   1              DB = com;
 159   1              delay_ms(1);//延时
 160   1      
 161   1              E = 1;   //写入时序
 162   1              delay_ms(5);//延时
 163   1              E = 0;
 164   1      }
 165          
 166          /*******************************************************************************
 167          * 函 数 名         : LcdWriteData
 168          * 函数功能                 : 向LCD写入一个字节的数据
 169          * 输    入         : u8dat
 170          * 输    出         : 无
 171          *******************************************************************************/
 172          
 173          void lcd_wri_data(unsigned char dat)//写入数据
 174          {
 175   1              E = 0;    //使能清零
 176   1              RS = 1;   //选择写入数据
 177   1              RW = 0;   //选择写入
 178   1              DB = dat;
 179   1              delay_ms(1);//延时
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 4   

 180   1              E = 1;    //写入时序
 181   1              delay_ms(5);//延时
 182   1              E = 0;
 183   1      }
 184          /*******************************************************************************
 185          * 函 数 名         : WriString
 186          * 函数功能                 : 刷新屏幕显示
 187          * 输    入         : hang，add，*p
 188          * 输    出         : 无
 189          *******************************************************************************/
 190          void wri_string(unsigned char y,unsigned char x,unsigned char *p)
 191          {
 192   1              if(y==1)//如果选择第一行
 193   1                      lcd_wri_com(0x80+x);//选中地址
 194   1              else
 195   1                      lcd_wri_com(0xc0+x);//选中地址
 196   1                      while(*p)
 197   1                      {
 198   2                              lcd_wri_data(*p);//写入数据
 199   2                              p++;
 200   2                      }
 201   1      }
 202          /*******************************************************************************
 203          * 函 数 名         : lcd_write_char
 204          * 函数功能                 :
 205          * 输    入         :
 206          * 输    出         : 无
 207          *******************************************************************************/
 208          void lcd_write_char(unsigned char y, unsigned char x, unsigned char dat) //列x=0~15,行y=0,1
 209          {
 210   1              unsigned char temp_l, temp_h;
 211   1              if(y==1)//如果选择第一行
 212   1                      lcd_wri_com(0x80+x);//选中地址
 213   1              else
 214   1                      lcd_wri_com(0xc0+x);//选中地址
 215   1              temp_l = dat % 10;
 216   1          temp_h = dat / 10;
 217   1          lcd_wri_data(temp_h + 0x30);//写入数据          //convert to ascii
 218   1          lcd_wri_data(temp_l + 0x30);//写入数据
 219   1      }
 220          /*********************光标控制***********************/
 221          void lcd1602_cursor(unsigned char on_off,unsigned char add)
 222          {
 223   1              if(on_off == 1)   //开光标
 224   1              {
 225   2                      lcd_wri_com(0xc0+add);              //将光标移动到秒个位
 226   2                      lcd_wri_com(0x0f);                //显示光标并且闪烁
 227   2              }
 228   1              else
 229   1              {
 230   2                      lcd_wri_com(0x0c);   //关光标
 231   2              }
 232   1      }
 233          
 234          /*******************************************************************************
 235          * 函 数 名       : LcdInit()
 236          * 函数功能               : 初始化LCD屏
 237          * 输    入       : 无
 238          * 输    出       : 无
 239          *******************************************************************************/
 240          void lcd_init(void)                                               //LCD初始化子程序
 241          {
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 5   

 242   1              lcd_wri_com(0x38);//置功能8位双行
 243   1              lcd_wri_com(0x0c);//显示开关光标
 244   1              lcd_wri_com(0x06);//字符进入模式屏幕不动字符后移
 245   1              delay_ms(5);//延时5ms
 246   1              lcd_wri_com(0x01);  //清屏
 247   1              //wri_string(1,0,"  welcome user  ");//初始化显示
 248   1              //wri_string(2,0,"A:open  B:modify");//初始化显示
 249   1              for(i=0;i<14;i++)
 250   1              {
 251   2                      LcdWriteData(Disp[i]);  
 252   2              }
 253   1              }
 254          /*******************************************************************************
 255          * 函 数 名         : I2C_Start()
 256          * 函数功能                 : 起始信号：在I2C_SCL时钟信号在高电平期间I2C_SDA信号产生一个下降沿
 257          * 输    入         : 无
 258          * 输    出         : 无
 259          * 备    注         : 起始之后I2C_SDA和I2C_SCL都为0
 260          *******************************************************************************/
 261          void I2C_Start()
 262          {
 263   1              I2C_SCL = 1;//时钟线拉高
 264   1              delay_us(6);//延时
 265   1              I2C_SDA = 1;//数据线拉高
 266   1              delay_us(6);//延时
 267   1              I2C_SDA = 0;//数据线拉低
 268   1              delay_us(6);//延时
 269   1              I2C_SCL = 0;//时钟线拉低
 270   1              delay_us(6);//延时
 271   1      }
 272          /*******************************************************************************
 273          * 函 数 名           : I2C_Stop()
 274          * 函数功能               : 终止信号：在I2C_SCL时钟信号高电平期间I2C_SDA信号产生一个上升沿
 275          * 输    入           : 无
 276          * 输    出               : 无
 277          * 备    注           : 结束之后保持I2C_SDA和I2C_SCL都为1；表示总线空闲
 278          *******************************************************************************/
 279          void I2C_Stop()
 280          {
 281   1              I2C_SCL = 0;//时钟线拉低
 282   1              delay_us(6);//延时
 283   1              I2C_SDA = 0;//数据线拉低
 284   1              delay_us(6);//延时
 285   1              I2C_SCL = 1;//时钟线拉高
 286   1              delay_us(6);//延时
 287   1              I2C_SDA = 1;//数据线拉高
 288   1              delay_us(6);//延时
 289   1      }
 290          void i2c_ACK(unsigned char ck)
 291          {
 292   1          if (ck)
 293   1                      I2C_SDA = 0;//数据线拉低
 294   1          else
 295   1                      I2C_SDA = 1;//时钟线拉高
 296   1          delay_us(6);//延时
 297   1          I2C_SCL = 1;//时钟线拉高
 298   1          delay_us(6);//延时
 299   1          I2C_SCL = 0;//时钟线拉低
 300   1              delay_us(6);//延时
 301   1          I2C_SDA = 1;
 302   1          delay_us(6);//延时
 303   1      }
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 6   

 304          unsigned char i2c_waitACK()
 305          {
 306   1              I2C_SDA = 1;
 307   1              delay_us(6);//延时
 308   1              I2C_SCL = 1;//时钟线拉高
 309   1              delay_us(6);//延时
 310   1              if (I2C_SDA)
 311   1              {
 312   2                      I2C_SCL = 0;//时钟线拉低
 313   2                      I2C_Stop();
 314   2                      return 1;
 315   2              }
 316   1              else
 317   1              {
 318   2                      I2C_SCL = 0;//时钟线拉低
 319   2                      return 0;
 320   2              }
 321   1      }
 322          void I2C_SendByte(unsigned char bt)
 323          {
 324   1              unsigned char i;
 325   1          for(i=0; i<8; i++)
 326   1          {
 327   2              if (bt & 0x80)
 328   2                              I2C_SDA = 1;
 329   2              else
 330   2                              I2C_SDA = 0;//数据线拉低
 331   2              delay_us(6);//延时
 332   2              I2C_SCL = 1;//时钟线拉高
 333   2              bt <<= 1;
 334   2              delay_us(6);//延时
 335   2              I2C_SCL = 0;//时钟线拉低
 336   2          }
 337   1      }
 338          /*******************************************************************************
 339          * 函 数 名           : I2cReadByte()
 340          * 函数功能               : 使用I2c读取一个字节
 341          * 输    入           : 无
 342          * 输    出               : dat
 343          * 备    注           : 接收完一个字节I2C_SCL=0
 344          *******************************************************************************/
 345          
 346          unsigned char I2C_ReadByte()
 347          {
 348   1                      unsigned char dee, i;
 349   1      
 350   1                      for (i=0; i<8; i++)
 351   1                      {
 352   2                              I2C_SCL = 1;//时钟线拉高
 353   2                              delay_us(6);
 354   2                              dee <<= 1;
 355   2                              if (I2C_SDA)
 356   2                                      dee = dee | 0x01;
 357   2                              I2C_SCL = 0;//时钟线拉低
 358   2                              delay_us(6);
 359   2                      }
 360   1                      return dee;
 361   1      }
 362          /*******************************************************************************
 363          * 函 数 名         : void At24c02Write(unsigned char u8addr,unsigned char u8dat)
 364          * 函数功能                 : 往24c02的一个地址写入一个数据
 365          * 输    入         : 无
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 7   

 366          * 输    出         : 无
 367          *******************************************************************************/
 368          unsigned char At24c02Write(unsigned char u8addr,unsigned char u8dat)
 369          {
 370   1              I2C_Start();//起始信号
 371   1              I2C_SendByte(0xa0);//发送写器件地址
 372   1              if (i2c_waitACK())
 373   1                      return 1;
 374   1              I2C_SendByte(u8addr);//发送要写入内存地址
 375   1              if (i2c_waitACK())
 376   1                      return 1;
 377   1              I2C_SendByte(u8dat);//发送数据
 378   1              if (i2c_waitACK())
 379   1                      return 1;
 380   1              I2C_Stop();//停止信号
 381   1              delay_ms(3);//延时
 382   1              return 0;
 383   1      }
 384          /*******************************************************************************
 385          * 函 数 名         : unsigned char At24c02Read(unsigned char addr)
 386          * 函数功能                 : 读取24c02的一个地址的一个数据
 387          * 输    入         : 无
 388          * 输    出         : 无
 389          *******************************************************************************/
 390          
 391          unsigned char At24c02Read(unsigned char u8addr,unsigned char *dat)
 392          {
 393   1      
 394   1              I2C_Start();
 395   1              I2C_SendByte(0xa0); //发送写器件地址
 396   1              if (i2c_waitACK())
 397   1                      return 1;
 398   1              I2C_SendByte(u8addr); //发送要读取的地址
 399   1              if (i2c_waitACK())
 400   1                      return 1;
 401   1              I2C_Start();
 402   1              I2C_SendByte(0xa1); //发送读器件地址
 403   1              if (i2c_waitACK())
 404   1                      return 1;
 405   1              *dat=I2C_ReadByte(); //读取数据
 406   1              i2c_ACK(0);
 407   1              I2C_Stop();
 408   1              return 0;
 409   1      }
 410          unsigned char At24c02WriteBuf(unsigned char *buf, unsigned char addr, unsigned char len)
 411          {
 412   1              while (len--)
 413   1              {
 414   2                      if (At24c02Write(addr++, *buf++))//连续写数据
 415   2                              return 1;
 416   2              }
 417   1              return 0;
 418   1      }
 419          unsigned char At24c02ReadBuf(unsigned char *buf, unsigned char addr, unsigned char len)
 420          {
 421   1              while (len--)
 422   1              {
 423   2                      if (At24c02Read(addr++,buf++))//连续读取数据
 424   2                      return 1;
 425   2              }
 426   1              return 0;
 427   1      }
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 8   

 428          void At24c02init(void)//密码初始化
 429          {
 430   1              unsigned char value;
 431   1              At24c02ReadBuf(&value,0x0a,1);
 432   1              if (value!=0xca)//第一次使用地址不是bb
 433   1              {
 434   2                      value = 0xcc;
 435   2                      At24c02WriteBuf(&value,0x0a,1);
 436   2                      At24c02WriteBuf(password,0,6);
 437   2              }
 438   1              At24c02ReadBuf(password,0,6);
 439   1      }
 440          /******************************************************
 441           ** 函数名：time_service
 442           ** 描述  ：定时处理函数
 443           ** 输入  : 无
 444           ** 输出  ：无
 445           ** 调用  ：中断调用
 446           ******************************************************/
 447          void time_service(void)
 448          {
 449   1                      if(time_100ms_flag)
 450   1                      {
 451   2                              time_100ms_flag = 0;
 452   2                              if (alm_tim_cnt)
 453   2                              alm_tim_cnt--;
 454   2                              if (relay==0)//延时自动关锁
 455   2                              {
 456   3                                      if(++open_del >= 10 * 5)        //10秒
 457   3                                      {
 458   4                                              open_del = 0;
 459   4                                          relay = 1;   //关闭密码锁
 460   4                                          now_window = chosemod;
 461   4                                              wri_string(1,0,"  welcome user  ");//初始化显示
 462   4                                              wri_string(2,0,"A:open  B:modify");//初始化显示
 463   4                                      }
 464   3                              }
 465   2                              if (open_flag)
 466   2                              {
 467   3                                      if(alm_flag)
 468   3                                      {
 469   4                                               if (alm_tim_cnt==0)
 470   4                                               {
 471   5                                                       alm_flag = 0;
 472   5                                       alm_tim_cnt = 2;
 473   5                                                       beep = 1;
 474   5                                               }
 475   4                                      }
 476   3                                      else
 477   3                                      {
 478   4                                               if (alm_tim_cnt==0)
 479   4                                               {
 480   5                                                       alm_flag = 1;
 481   5                                       alm_tim_cnt = 2;
 482   5                                                       beep = 0;
 483   5                                               }
 484   4                                      }
 485   3                                      if(++open_del >= 10 * 2)
 486   3                                      {
 487   4                                              open_del = 0;
 488   4                                              open_flag = 0;
 489   4                                              alm_flag = 0;
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 9   

 490   4                                          alm_tim_cnt = 0;
 491   4                                          beep = 1;
 492   4                                              if (password_err_cnt>=3)
 493   4                                              {
 494   5                              lock_flag = 1;
 495   5                              password_err_cnt = 0;
 496   5                                                      return;
 497   5                                              }
 498   4                                              else
 499   4                                              {
 500   5                                                      now_window = inputpassword;
 501   5                                                      wri_string(1,0,"Input password  ");//
 502   5                                  wri_string(2,0,"                ");//
 503   5                                  lcd1602_cursor(1,0);
 504   5                                              }
 505   4                                      }
 506   3                              }
 507   2                              if (lock_flag)//错误三次
 508   2                              {
 509   3                                              if(alm_flag)
 510   3                                              {
 511   4                                                       if (alm_tim_cnt==0)
 512   4                                                       {
 513   5                                                               alm_flag = 0;
 514   5                                               alm_tim_cnt = 5;
 515   5                                                               beep = 1;
 516   5                                                       }
 517   4                                              }
 518   3                                              else
 519   3                                              {
 520   4                                                       if (alm_tim_cnt==0)
 521   4                                                       {
 522   5                                                               alm_flag = 1;
 523   5                                               alm_tim_cnt = 5;
 524   5                                                               beep = 0;
 525   5                                                       }
 526   4                                              }
 527   3                                              wri_string(1,0,"  Machine lock  ");//初始化显示
 528   3                                              wri_string(2,0,"   one minute   ");//初始化显示
 529   3                                              lcd1602_cursor(0,0);
 530   3                                              now_window = keynoser;//按键不响应
 531   3                                              if(++err_tim_cnt>= 10 * 30)
 532   3                                              {
 533   4      
 534   4                                                      now_window = chosemod;
 535   4                              err_tim_cnt = 0;
 536   4                              lock_flag = 0;
 537   4                              beep = 1;
 538   4                                                      wri_string(1,0,"  welcome user  ");//初始化显示
 539   4                                                      wri_string(2,0,"A:open  B:modify");//初始化显示
 540   4                                              }
 541   3      
 542   3                              }
 543   2                              if(cha_err_flag)//输入有误
 544   2                              {
 545   3                                      if(alm_flag)
 546   3                                      {
 547   4                                               if (alm_tim_cnt==0)
 548   4                                               {
 549   5                                                       alm_flag = 0;
 550   5                                       alm_tim_cnt = 5;
 551   5                                                       beep = 1;
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 10  

 552   5                                               }
 553   4                                      }
 554   3                                      else
 555   3                                      {
 556   4                                               if (alm_tim_cnt==0)
 557   4                                               {
 558   5                                                       alm_flag = 1;
 559   5                                       alm_tim_cnt = 5;
 560   5                                                       beep = 0;
 561   5                                               }
 562   4                                      }
 563   3                                      if (++cha_err_cnt>10*2)
 564   3                                      {
 565   4                                              cha_err_flag = 0;
 566   4                                              cha_err_cnt = 0;
 567   4                                              now_window = chosemod;
 568   4                                              wri_string(1,0,"  welcome user  ");//初始化显示
 569   4                                              wri_string(2,0,"A:open  B:modify");//初始化显示
 570   4                                      }
 571   3                              }
 572   2                      }
 573   1      }
 574          /******************************************************
 575           ** 函数名：key_service
 576           ** 描述  ：按键服务函数
 577           ** 输入  ：无
 578           ** 输出  ：无
 579           ** 调用  ：主程序
 580          ******************************************************/
 581          void key_service(void)
 582          {
 583   1              switch (now_window)
 584   1              {
 585   2      
 586   2                    case chosemod:
 587   2                    {
 588   3                           switch (key_value)
 589   3                           {
 590   4                                  case 10://输入密码
 591   4                                  {
 592   5                                      wri_string(1,0,"Input password  ");//
 593   5                                      wri_string(2,0,"                ");//
 594   5                                      lcd1602_cursor(1,0);
 595   5                                                                      now_window = inputpassword;
 596   5                                  }
 597   4                                  break;
 598   4                                  case 11://设置密码
 599   4                                  {
 600   5                                      wri_string(1,0,"Put Old Password ");//
 601   5                                          wri_string(2,0,"                 ");//
 602   5                                          lcd1602_cursor(1,0);
 603   5                                                                      now_window = changeoldpassword;
 604   5                                  }
 605   4                                  break;
 606   4                                  case 12://设置密码
 607   4                                  {
 608   5                                          password[0] = 1;
 609   5                                          password[1] = 1;
 610   5                                          password[2] = 1;
 611   5                                          password[3] = 1;
 612   5                                          password[4] = 1;
 613   5                                          password[5] = 1;
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 11  

 614   5                                          At24c02WriteBuf(password,0,6);
 615   5                                                                              delay_ms(300);
 616   5                                                                              beep = 0;
 617   5                                                                              delay_ms(2000);
 618   5                                                                              beep = 1;
 619   5                                  }
 620   4                                  break;
 621   4                           }
 622   3                    }
 623   2                    break;
 624   2                    case inputpassword://输入密码
 625   2                    {
 626   3                              switch (key_value)
 627   3                              {
 628   4                                                      case 1: case 2:case 3:
 629   4                                                      case 4: case 5:case 6:
 630   4                                                      case 7: case 8:case 9:case 0:
 631   4                                                      {
 632   5                                                              password_now[curr_bit] = key_value;
 633   5                                                              if (++curr_bit>6)//输入6位密码
 634   5                                                              {
 635   6                                                                      curr_bit = 6;
 636   6                                                              }
 637   5                                                              curr_bit_tmp = curr_bit;
 638   5                                                              for(i=0;i<curr_bit_tmp;i++)//显示*号
 639   5                                                              dis_dat[i] = '*';
 640   5                                                                                      wri_string(2,0,dis_dat);
 641   5                                                                                      lcd1602_cursor(1, curr_bit);
 642   5                                                      }
 643   4                                                      break;
 644   4                                                      case 14://按下#删除密码
 645   4                                                      {
 646   5                                                              password_now[curr_bit] = 20;
 647   5                                                              if (--curr_bit<0)
 648   5                                                                      curr_bit = 0;
 649   5                                                                                      dis_dat[curr_bit] = ' ';//显示为空
 650   5                                                                                      wri_string(2,0,dis_dat);
 651   5                                                                                      lcd1602_cursor(1, curr_bit);
 652   5                                                      }
 653   4                                                      break;
 654   4                                                      case 15://按下确认比对密码
 655   4                                                      {
 656   5                                                              if(
 657   5                                                                      password_now[0] == password[0]&&
 658   5                                                                  password_now[1] == password[1]&&
 659   5                                                                      password_now[2] == password[2]&&
 660   5                                                                      password_now[3] == password[3]&&
 661   5                                                                      password_now[4] == password[4]&&
 662   5                                                                      password_now[5] == password[5]
 663   5                                                                )
 664   5                                                              {
 665   6      
 666   6                                                                      relay = 0;//打开继电器
 667   6                                                                      wri_string(1,0,"    success    ");
 668   6                                                                                              wri_string(2,0,"     open      ");
 669   6                                                                                              lcd1602_cursor(0, curr_bit);
 670   6                                                                                              now_window = keynoser;//按键不响应
 671   6                                                              }
 672   5                                                              else
 673   5                                                              {
 674   6                                                                                                password_err_cnt++;
 675   6                                                                        open_flag = 1;//错误标志
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 12  

 676   6                                                                        wri_string(1,0,"password err   ");
 677   6                                                                                                wri_string(2,0,"  err cnt:     ");
 678   6                                                                                                lcd_write_char(2,10,password_err_cnt);
 679   6                                                                                                lcd1602_cursor(0, curr_bit);
 680   6                                                                                                now_window = keynoser;//按键不响应
 681   6                                                                                                alm_flag = 1;
 682   6                                                                                                alm_tim_cnt = 4;
 683   6                                                                                                beep = 0;
 684   6                                                              }
 685   5                                                              for(i = 0;i < 6;i++)
 686   5                                                              {
 687   6                                                                                                dis_dat[i] = 0;
 688   6                                                                        password_now[i] = 0;
 689   6                                                                        curr_bit = 0;
 690   6                                                                        curr_bit_tmp = 0;
 691   6                                                              }
 692   5                                                      }
 693   4                                                              break;
 694   4                                      }
 695   3                    }
 696   2                    break;
 697   2                    case changeoldpassword://修改密前输入旧密码
 698   2                    {
 699   3                              switch (key_value)
 700   3                              {
 701   4                                                      case 1: case 2:case 3:
 702   4                                                      case 4: case 5:case 6:
 703   4                                                      case 7: case 8:case 9:case 0:
 704   4                                                      {
 705   5                                                              password_now[curr_bit] = key_value;
 706   5                                                              if (++curr_bit>6)//输入6位密码
 707   5                                                              {
 708   6                                                                      curr_bit = 6;
 709   6                                                              }
 710   5                                                              curr_bit_tmp = curr_bit;
 711   5                                                              for(i=0;i<curr_bit_tmp;i++)//显示*号
 712   5                                                              dis_dat[i] = '*';
 713   5                                                                                      wri_string(2,0,dis_dat);
 714   5                                                                                      lcd1602_cursor(1, curr_bit);
 715   5                                                      }
 716   4                                                      break;
 717   4                                                      case 14://按下#删除密码
 718   4                                                      {
 719   5                                                              password_now[curr_bit] = 20;
 720   5                                                              if (--curr_bit<0)
 721   5                                                                      curr_bit = 0;
 722   5                                                                                      dis_dat[curr_bit] = ' ';//显示为空
 723   5                                                                                      wri_string(2,0,dis_dat);
 724   5                                                                                      lcd1602_cursor(1, curr_bit);
 725   5                                                      }
 726   4                                                      break;
 727   4                                                      case 15://按下确认比对密码
 728   4                                                      {
 729   5                                                              if(
 730   5                                                                      password_now[0] == password[0]&&
 731   5                                                                  password_now[1] == password[1]&&
 732   5                                                                      password_now[2] == password[2]&&
 733   5                                                                      password_now[3] == password[3]&&
 734   5                                                                      password_now[4] == password[4]&&
 735   5                                                                      password_now[5] == password[5]
 736   5                                                                )
 737   5                                                              {
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 13  

 738   6                                                                      wri_string(1,0,"    success    ");
 739   6                                                  delay_ms(500);
 740   6                                                  wri_string(1,0,"Set New Password ");//
 741   6                                                      wri_string(2,0,"                 ");//
 742   6                                                      lcd1602_cursor(1,0);
 743   6                                                                                              now_window = changepassword;//按键不响应
 744   6                                                              }
 745   5                                                              else
 746   5                                                              {
 747   6                                                    lcd1602_cursor(0,0);
 748   6                                                                        wri_string(1,0,"password err    ");
 749   6                                                    wri_string(2,0,"                ");
 750   6                                                                                                delay_ms(500);
 751   6                                                    delay_ms(500);
 752   6                                                    delay_ms(500);
 753   6                                                    delay_ms(500);
 754   6                                                    wri_string(1,0,"  welcome user  ");//初始化显示
 755   6                                                                        wri_string(2,0,"A:open  B:modify");//初始化显示
 756   6                                                                                                now_window = chosemod;
 757   6      
 758   6                                                              }
 759   5                                                              for(i = 0;i < 6;i++)
 760   5                                                              {
 761   6                                                                                                dis_dat[i] = 0;
 762   6                                                                        password_now[i] = 0;
 763   6                                                                        curr_bit = 0;
 764   6                                                                        curr_bit_tmp = 0;
 765   6                                                              }
 766   5                                                      }
 767   4                                                              break;
 768   4                                      }
 769   3                    }
 770   2                    break;
 771   2                    case changepassword://修改密码
 772   2                    {
 773   3                                               switch (key_value)
 774   3                                               {
 775   4                                                              case 1: case 2:case 3:
 776   4                                              case 4: case 5:case 6:
 777   4                                              case 7: case 8:case 9:case 0:
 778   4                                              {
 779   5                                                      password_now[curr_bit] = key_value;
 780   5                                                      if (++curr_bit>6)//输入6位密码
 781   5                                                      {
 782   6                                                              curr_bit = 6;
 783   6                                                      }
 784   5                                                      curr_bit_tmp = curr_bit;
 785   5                                                      for(i=0;i<curr_bit_tmp;i++)//显示*号
 786   5                                                      dis_dat[i] = '*';
 787   5                                                                      wri_string(2,0,dis_dat);
 788   5                                                                      lcd1602_cursor(1, curr_bit);
 789   5                                              }
 790   4                                              break;
 791   4                                                          case 14:
 792   4                                              {
 793   5                                                      password_now[curr_bit] = 20;
 794   5                                                      if (--curr_bit<0)
 795   5                                                              curr_bit = 0;
 796   5                                                                      dis_dat[curr_bit] = ' ';//显示为空
 797   5                                                                      wri_string(2,0,dis_dat);
 798   5                                                                      lcd1602_cursor(1, curr_bit);
 799   5                                              }
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 14  

 800   4                                              break;
 801   4                                                              case 15:
 802   4                                                              {
 803   5      
 804   5                                                                      for(i = 0;i < 6;i++)
 805   5                                                      {
 806   6                                                                        dis_dat[i] = 0;
 807   6                                                        curr_bit = 0;
 808   6                                                        curr_bit_tmp = 0;
 809   6                                                      }
 810   5                                                                      wri_string(1,0,"   put again    ");//再次输入
 811   5                                          wri_string(2,0,"                ");//
 812   5                                          lcd1602_cursor(1,0);
 813   5                                                                      now_window = putagain;
 814   5                                                              }
 815   4                                                              break;
 816   4                                               }
 817   3                    }
 818   2                    break;
 819   2                                case putagain://修改密码后再次输入
 820   2                                {
 821   3                                       switch (key_value)
 822   3                                       {
 823   4                                                              case 1: case 2:case 3:
 824   4                                              case 4: case 5:case 6:
 825   4                                              case 7: case 8:case 9:case 0:
 826   4                                              {
 827   5                                                      chang_pass[curr_bit] = key_value;
 828   5                                                      if (++curr_bit>6)//输入6位密码
 829   5                                                      {
 830   6                                                              curr_bit = 6;
 831   6                                                      }
 832   5                                                      curr_bit_tmp = curr_bit;
 833   5                                                      for(i=0;i<curr_bit_tmp;i++)//显示*号
 834   5                                                      dis_dat[i] = '*';
 835   5                                                                      wri_string(2,0,dis_dat);
 836   5                                                                      lcd1602_cursor(1, curr_bit);
 837   5                                              }
 838   4                                              break;
 839   4                                                              case 14:
 840   4                                              {
 841   5                                                      chang_pass[curr_bit] = 20;
 842   5                                                      if (--curr_bit<0)
 843   5                                                              curr_bit = 0;
 844   5                                                                      dis_dat[curr_bit] = ' ';//显示为空
 845   5                                                                      wri_string(2,0,dis_dat);
 846   5                                                                      lcd1602_cursor(1, curr_bit);
 847   5                                              }
 848   4                                              break;
 849   4                                                              case 15:
 850   4                                                              {
 851   5      
 852   5      
 853   5                                                                      if(
 854   5                                                                      password_now[0] == chang_pass[0]&&
 855   5                                                                  password_now[1] == chang_pass[1]&&
 856   5                                                                      password_now[2] == chang_pass[2]&&
 857   5                                                                      password_now[3] == chang_pass[3]&&
 858   5                                                                      password_now[4] == chang_pass[4]&&
 859   5                                                                      password_now[5] == chang_pass[5]
 860   5                                                )
 861   5                                                                      {
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 15  

 862   6                                                                              wri_string(1,0,"change Password ");
 863   6                                                                              wri_string(2,0,"    Succeed     ");
 864   6                                                                              for(i=0;i<6;i++)
 865   6                                                                              {
 866   7                                                                                      password[i] = chang_pass[i];   //保存密码
 867   7                                                                              }
 868   6                                                                              At24c02WriteBuf(password,0,6);
 869   6                                                                              delay_ms(300);
 870   6                                                                              beep = 0;
 871   6                                                                              delay_ms(2000);
 872   6                                                                              beep = 1;
 873   6                                                                              now_window = chosemod;
 874   6                                                                              wri_string(1,0,"  welcome user  ");//初始化显示
 875   6                                                                              wri_string(2,0,"A:open  B:modify");//初始化显示
 876   6                                                                      }
 877   5                                                                      else
 878   5                                                                      {
 879   6                                                                                  cha_err_flag = 1;
 880   6                                                                                      wri_string(1,0," Two different  ");
 881   6                                                                                      wri_string(2,0,"     return     ");
 882   6                                                                                      now_window = keynoser;//按键不响应
 883   6                                                                                      alm_flag = 1;
 884   6                                                                                      alm_tim_cnt = 5;
 885   6                                                                                      beep = 0;
 886   6                                                                      }
 887   5                                                                      for(i = 0;i < 6;i++)
 888   5                                                      {
 889   6                                                                        dis_dat[i] = 0;
 890   6                                                        password_now[i] = 0;
 891   6                                                        curr_bit = 0;
 892   6                                                        curr_bit_tmp = 0;
 893   6                                                      }
 894   5      
 895   5                                                              }
 896   4                                                              break;
 897   4      
 898   4                                       }
 899   3                                }
 900   2                                break;
 901   2              }
 902   1      
 903   1      
 904   1      }
 905          /******************************************************
 906           ** 函数名：init_all_hardware
 907           ** 描述  ：初始化所有硬件，及其变量参数。
 908           ** 输入  ：无
 909           ** 输出  ：无
 910           ** 调用  ：主程序
 911           ******************************************************/
 912          void init_all_hardware(void)
 913          {
 914   1                      delay_ms(100);
 915   1                      time_init();//定时器初始化
 916   1              lcd_init();//液晶初始化
 917   1                      At24c02init();//存储初始化
 918   1                      key_value = 20;//默认没按键按下
 919   1                      now_window = chosemod;//选择模式
 920   1                      cnt_100ms = 0;
 921   1                      time_100ms_flag = 0;
 922   1                      open_del = 0;
 923   1                      relay = 1;//继电器关闭。
C51 COMPILER V9.01   MAIN                                                                  05/25/2019 15:22:33 PAGE 16  

 924   1                      curr_bit = 0;
 925   1                      open_flag = 0;
 926   1                      password_err_cnt =0;
 927   1                      err_tim_cnt = 0;
 928   1                      alm_tim_cnt = 0;
 929   1                      alm_flag = 0;
 930   1                      cha_err_flag = 0;
 931   1                      cha_err_cnt = 0;
 932   1              beep = 1;
 933   1              lock_flag =0;
 934   1      }
 935          void main(void)
 936          {
 937   1               init_all_hardware();//初始化硬件，IO和定时器
 938   1               while(1)
 939   1               {
 940   2                       key_scan();//按键扫描
 941   2                       key_service();//按键服务处理函数
 942   2                       time_service();//时间处理函数
 943   2               }
 944   1      }
 945           /******************************************************
 946           ** 函数名：time0_interrupt
 947           ** 描述  ：按键扫描函数
 948           ** 输入  ：无
 949           ** 输出  ：无
 950           ******************************************************/
 951          void time0_interrupt() interrupt 1
 952          {
 953   1                 TF0 = 0;//清除标志
 954   1                 TR0 = 0;
 955   1                 if (++cnt_100ms>50)
 956   1                 {
 957   2                              cnt_100ms = 0;
 958   2                              time_100ms_flag = 1;
 959   2                 }
 960   1                 TR0 = 1;
 961   1                 TH0 = 0xf8;
 962   1                 TL0 = 0x2f;//装载初值2ms(65535-63535)
 963   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2372    ----
   CONSTANT SIZE    =    322    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
